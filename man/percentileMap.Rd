% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polar_percentileMap.R
\name{percentileMap}
\alias{percentileMap}
\title{Percentile roses on interactive leaflet maps}
\usage{
percentileMap(
  data,
  pollutant = NULL,
  percentile = c(25, 50, 75, 90, 95),
  intervals = "fixed",
  latitude = NULL,
  longitude = NULL,
  crs = 4326,
  type = NULL,
  popup = NULL,
  label = NULL,
  provider = NULL,
  cols = "turbo",
  alpha = 1,
  key = FALSE,
  draw.legend = TRUE,
  collapse.control = FALSE,
  d.icon = 200,
  d.fig = 3.5,
  static = FALSE,
  static.nrow = NULL,
  ...
)
}
\arguments{
\item{data}{\emph{Input data table with pollutant, wind, and geo-spatial
information.}

\strong{required} | \emph{scope:} dynamic & static

A data frame. The data frame must contain the data to plot the directional
analysis marker, which includes wind speed (\code{ws}), wind direction (\code{wd}),
and the column representing the concentration of a pollutant. In addition,
\code{data} must include a decimal latitude and longitude (or X/Y coordinate used
in conjunction with \code{crs}).}

\item{pollutant}{\emph{Pollutant name(s).}

\strong{required} | \emph{scope:} dynamic & static

The column name(s) of the pollutant(s) to plot. If multiple pollutants are
specified the \code{type} argument will no longer be able to be used, and:
\itemize{
\item \emph{Dynamic}: The pollutants can be toggled between using a "layer control" menu.
\item \emph{Static:}: The pollutants will each appear in a different panel.
}

Multiple \code{pollutants} prohibit the use of the \code{type} argument.}

\item{percentile}{\emph{The percentile values for the colour scale bin.}

\emph{default:} \code{c(25, 50, 75, 90, 95)} | \emph{scope:} dynamic & static

The percentile value(s) to plot using \code{\link[openair:percentileRose]{openair::percentileRose()}}. Must be
a vector of values between \code{0} and \code{100}. If \code{percentile = NA} then only a
mean line will be shown.}

\item{intervals}{\emph{Specifier for the percentile rose radial axis intervals.}

\emph{default:} \code{"fixed"} | \emph{scope:} dynamic & static

One of:
\itemize{
\item \code{"fixed"} (the default) which ensures all of the markers use the same radial axis scale.
\item \code{"free"} which allows all of the markers to use different radial axis scales.
\item A numeric vector defining a sequence of numbers to use as the intervals, e.g., \code{intervals = c(0, 10, 30, 50)}.
}}

\item{latitude, longitude}{\emph{The decimal latitude(Y)/longitude(X).}

\emph{default:} \code{NULL} | \emph{scope:} dynamic & static

Column names representing the decimal latitude and longitude (or other Y/X
coordinate if using a different \code{crs}). If not provided, will be
automatically inferred from data by looking for a column named
"lat"/"latitude" or "lon"/"lng"/"long"/"longitude" (case-insensitively).}

\item{crs}{\emph{The coordinate reference system (CRS).}

\emph{default:} \code{4326} | \emph{scope:} dynamic & static

The coordinate reference system (CRS) of the data, passed to \code{\link[sf:st_crs]{sf::st_crs()}}.
By default this is \href{https://epsg.io/4326}{EPSG:4326}, the CRS associated
with the commonly used latitude and longitude coordinates. Different
coordinate systems can be specified using \code{crs} (e.g., \code{crs = 27700} for the
\href{https://epsg.io/27700}{British National Grid}). Note that non-lat/lng
coordinate systems will be re-projected to EPSG:4326 for plotting on the
map.}

\item{type}{\emph{A method to condition the \code{data} for separate plotting.}

\emph{default:} \code{NULL} | \emph{scope:} dynamic & static

Used for splitting the input data into different groups, passed to the
\code{type} argument of \code{\link[openair:cutData]{openair::cutData()}}. When \code{type} is specified:
\itemize{
\item \emph{Dynamic}: The different data splits can be toggled between using a "layer control" menu.
\item \emph{Static:}: The data splits will each appear in a different panel.
}

\code{type} cannot be used if multiple \code{pollutant} columns have been provided.}

\item{popup}{\emph{Content for marker popups on dynamic maps.}

\emph{default:} \code{NULL} | \emph{scope:} dynamic

Columns to be used as the HTML content for marker popups on dynamic maps.
Popups may be useful to show information about the individual sites (e.g.,
site names, codes, types, etc.). If a vector of column names are provided
they are passed to \code{\link[=buildPopup]{buildPopup()}} using its default values.}

\item{label}{\emph{Content for marker hover-over on dynamic maps.}

\emph{default:} \code{NULL} | \emph{scope:} dynamic

Column to be used as the HTML content for hover-over labels. Labels are
useful for the same reasons as popups, though are typically shorter.}

\item{provider}{\emph{The basemap(s) to be used.}

\emph{default:} \code{NULL} | \emph{scope:} dynamic & static

The base map(s) to be used beneath the polar markers. If not provided, will
default to OpenStreetMap for both dynamic and static maps.
\itemize{
\item \emph{Dynamic}: Any number of \link[leaflet:providers]{leaflet::providers}.
See \url{http://leaflet-extras.github.io/leaflet-providers/preview/} for a list
of all base maps that can be used. If multiple base maps are provided, they
can be toggled between using a "layer control" interface. By default, the
interface will use the provider names as labels, but users can define their
own using a named vector (e.g., \code{c("Default" = "OpenStreetMap", "Satellite"  = "Esri.WorldImagery")})
\item \emph{Static}: One of \code{\link[rosm:deprecated]{rosm::osm.types()}}.
}}

\item{cols}{\emph{Colours to use for plotting.}

\emph{default:} \code{"turbo"} | \emph{scope:} dynamic & static

The colours used for plotting, passed to \code{\link[openair:openColours]{openair::openColours()}}. The
default, \code{"turbo"}, is a rainbow palette with relatively perceptually
uniform colours. Read more about this palette at
\url{https://research.google/blog/turbo-an-improved-rainbow-colormap-for-visualization/}.}

\item{alpha}{\emph{Transparency value for polar markers.}

\emph{default:} \code{1} | \emph{scope:} dynamic & static

A value between 0 (fully transparent) and 1 (fully opaque).}

\item{key}{\emph{Transparency value for polar markers.}

\emph{default:} \code{FALSE} | \emph{scope:} dynamic & static

Draw a key for each individual marker? Potentially useful when \code{limits = "free"}, but of limited use otherwise.}

\item{draw.legend}{\emph{Draw a shared legend?}

\emph{default:} \code{TRUE} | \emph{scope:} dynamic & static

When all markers share the same colour scale (e.g., when \code{limits != "free"}
in \code{\link[=polarMap]{polarMap()}}), should a shared legend be created at the side of the map?}

\item{collapse.control}{\emph{Show the layer control as a collapsed?}

\emph{default:} \code{FALSE} | \emph{scope:} dynamic

For \emph{dynamic} maps, should the "layer control" interface be collapsed? If
\code{TRUE}, users will have to hover over an icon to view the options.}

\item{d.icon}{\emph{The diameter of the plot on the map in pixels.}

\emph{default:} \code{200} | \emph{scope:} dynamic & static

This will affect the size of the individual polar markers. Alternatively, a
vector in the form \code{c(width, height)} can be provided if a non-circular
marker is desired.}

\item{d.fig}{\emph{The diameter of the plots to be produced using \code{{openair}} in
inches.}

\emph{default:} \code{3.5} | \emph{scope:} dynamic & static

This will affect the resolution of the markers on the map. Alternatively, a
vector in the form \code{c(width, height)} can be provided if a non-circular
marker is desired.}

\item{static}{\emph{Produce a static map?}

\emph{default:} \code{FALSE}

This controls whether a \emph{dynamic} or \emph{static} map is produced. The former is
the default and is broadly more useful, but the latter may be preferable for
DOCX or PDF outputs (e.g., academic papers).}

\item{static.nrow}{\emph{Number of rows in a static map.}

\emph{default:} \code{NULL} | \emph{scope:} static

Controls the number of rows of panels on a static map when multiple
\code{pollutant}s or \code{type} are specified; passed to the \code{nrow} argument of
\code{\link[ggplot2:facet_wrap]{ggplot2::facet_wrap()}}. The default, \code{NULL}, results in a roughly square
grid of panels.}

\item{...}{
  Arguments passed on to \code{\link[openair:percentileRose]{openair::percentileRose}}
  \describe{
    \item{\code{wd}}{Name of wind direction field.}
    \item{\code{smooth}}{Should the wind direction data be smoothed using a cyclic
spline?}
    \item{\code{method}}{When \code{method = "default"} the supplied percentiles by wind
direction are calculated. When \code{method = "cpf"} the conditional
probability function (CPF) is plotted and a single (usually high)
percentile level is supplied. The CPF is defined as CPF = my/ny, where my
is the number of samples in the wind sector y with mixing ratios greater
than the \emph{overall} percentile concentration, and ny is the total
number of samples in the same wind sector (see Ashbaugh et al., 1985).}
    \item{\code{angle}}{Default angle of \dQuote{spokes} is when \code{smooth = FALSE}.}
    \item{\code{mean}}{Show the mean by wind direction as a line?}
    \item{\code{mean.lty}}{Line type for mean line.}
    \item{\code{mean.lwd}}{Line width for mean line.}
    \item{\code{mean.col}}{Line colour for mean line.}
    \item{\code{fill}}{Should the percentile intervals be filled (default) or should
lines be drawn (\code{fill = FALSE}).}
    \item{\code{angle.scale}}{Sometimes the placement of the scale may interfere with an
interesting feature. The user can therefore set \code{angle.scale} to any
value between 0 and 360 degrees to mitigate such problems. For example
\code{angle.scale = 45} will draw the scale heading in a NE direction.}
    \item{\code{auto.text}}{Either \code{TRUE} (default) or \code{FALSE}. If \code{TRUE}
titles and axis labels will automatically try and format pollutant names
and units properly e.g.  by subscripting the `2' in NO2.}
    \item{\code{key.header}}{Adds additional text/labels to the scale key. For example,
passing the options \code{key.header = "header", key.footer = "footer1"}
adds addition text above and below the scale key. These arguments are
passed to \code{drawOpenKey} via \code{quickText}, applying the
\code{auto.text} argument, to handle formatting.}
    \item{\code{key.footer}}{see \code{key.footer}.}
    \item{\code{key.position}}{Location where the scale key is to plotted. Allowed
arguments currently include \code{"top"}, \code{"right"}, \code{"bottom"}
and \code{"left"}.}
  }}
}
\value{
Either:
\itemize{
\item \emph{Dynamic:} A leaflet object
\item \emph{Static:} A \code{ggplot2} object using \code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}} coordinates with a \code{ggspatial} basemap
}
}
\description{
\code{\link[=percentileMap]{percentileMap()}} creates a \code{leaflet} map using percentile roses as markers.
Any number of pollutants can be specified using the \code{pollutant} argument, and
multiple layers of markers can be added and toggled between using \code{control}.
}
\section{Customisation of static maps using ggplot2}{


As the outputs of the static directional analysis functions are \code{ggplot2}
figures, further customisation is possible using functions such as
\code{\link[ggplot2:theme]{ggplot2::theme()}}, \code{\link[ggplot2:guides]{ggplot2::guides()}} and \code{\link[ggplot2:labs]{ggplot2::labs()}}.

If multiple pollutants are specified, subscripting (e.g., the "x" in "NOx")
is achieved using the \link[ggtext:ggtext]{ggtext} package. Therefore if you
choose to override the plot theme, it is recommended to use
\verb{[ggplot2::theme()]} and \verb{[ggtext::element_markdown()]} to define the
\code{strip.text} parameter.

When arguments like \code{limits}, \code{percentile} or \code{breaks} are defined, a legend
is automatically added to the figure. Legends can be removed using
\code{ggplot2::theme(legend.position = "none")}, or further customised using
\code{\link[ggplot2:guides]{ggplot2::guides()}} and either \code{color = ggplot2::guide_colourbar()} for
continuous legends or \code{fill = ggplot2::guide_legend()} for discrete legends.
}

\examples{
\dontrun{
percentileMap(polar_data,
  pollutant = "nox",
  provider = "CartoDB.Voyager"
)
}
}
\seealso{
\code{\link[openair:percentileRose]{openair::percentileRose()}}

Other directional analysis maps: 
\code{\link{annulusMap}()},
\code{\link{diffMap}()},
\code{\link{freqMap}()},
\code{\link{polarMap}()},
\code{\link{pollroseMap}()},
\code{\link{windroseMap}()}
}
\concept{directional analysis maps}
